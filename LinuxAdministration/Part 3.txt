Part 3: 



#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>

int main() {
        int pid1;
        int pid2;

        pid1 = fork();
        if (pid1 == 0) {
                sleep(5);
                char *args[] = {"/usr/bin/mpstat", NULL};
                execv(args[0], args);
                perror("execv for mpstat failed");
                exit(1);
        }

        pid2 = fork();
        if (pid2 == 0) {
                sleep(5);
                char *args[] = {"/bin/ps", NULL};
                execv(args[0], args);
                perror("execv for ps failed");
                exit(1);
        }

        int status;
        waitpid(pid1, &status, 0);
        printf("Child 1 (mpstat) exited with status %d\n", WEXITSTATUS(status));
        waitpid(pid2, &status, 0);
        printf("Child 2 (ps) exited with status %d\n", WEXITSTATUS(status));
        return 0;
}